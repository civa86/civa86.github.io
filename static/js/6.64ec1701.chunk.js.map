{"version":3,"sources":["components/ContentFormatters/index.js","components/Contents/Intro.js"],"names":["CodeLine","props","className","onClick","evt","event","stopPropagation","Array","from","document","querySelectorAll","forEach","node","classList","remove","currentTarget","add","children","CodeBlock","Tabulator","HtmlLine","attributes","tag","map","a","i","key","value","HtmlOpenTag","HtmlCloseTag","CssBlockStart","CssRule","ruleKey","quoted","ruleValue","CssBlockEnd","JsonBlockStart","JsonKey","jsonKey","isArray","JsonValues","jsonValues","x","length","trailingComma","JsonBlockEnd","YamlLine","yamlKey","mailLink","href","yamlValue","target","rel","YamlArrayValue","yamlLink","Intro","age","moment","diff","exp"],"mappings":"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","file":"static/js/6.64ec1701.chunk.js","sourcesContent":["import React from 'react'\n\n// Style\nimport './style.scss'\n\n// Functions\nconst selectCodeLine = event => {\n  event.stopPropagation()\n  const selectedLines = Array.from(document.querySelectorAll('.CodeLine--selected'))\n  selectedLines.forEach(node => {\n    node.classList.remove('CodeLine--selected')\n  })\n  event.currentTarget.classList.add('CodeLine--selected')\n}\n\n// Code Line\nexport const CodeLine = props => {\n  return (\n    <span className=\"CodeLine\" onClick={evt => selectCodeLine(evt)}>\n      {props.children}\n    </span>\n  )\n}\n\n// Code Block\nexport const CodeBlock = props => {\n  return <div className=\"CodeBlock\">{props.children}</div>\n}\n\n// General\nexport const Tabulator = () => {\n  return <span>&nbsp;&nbsp;</span>\n}\n\nexport const CommentLine = props => {\n  return <span className=\"CommentLine\">{props.children}</span>\n}\n\n// HTML\nexport const HtmlLine = props => {\n  const attributes = props.attributes || []\n  return (\n    <span className=\"HtmlLine\">\n      <span>{'<'}</span>\n      <span className=\"HtmlLine__tag\">{props.tag}</span>\n      {attributes.map((a, i) => (\n        <span key={`attr-${i}`}>\n          {' '}\n          <span className=\"HtmlLine__attr-key\">{a.key}</span>\n          <span>{'=\"'}</span>\n          <span className=\"HtmlLine__attr-value\">{a.value}</span>\n          <span>{'\"'}</span>\n        </span>\n      ))}\n      <span>{'>'}</span>\n      <span className=\"HtmlLine__content\">{props.children}</span>\n      <span>{'</'}</span>\n      <span className=\"HtmlLine__tag\">{props.tag}</span>\n      <span>{'>'}</span>\n    </span>\n  )\n}\n\nexport const HtmlOpenTag = props => {\n  const attributes = props.attributes || []\n  return (\n    <span className=\"HtmlLine\">\n      <span>{'<'}</span>\n      <span className=\"HtmlLine__tag\">{props.tag}</span>\n      {attributes.map((a, i) => (\n        <span key={`attr-${i}`}>\n          {' '}\n          <span className=\"HtmlLine__attr-key\">{a.key}</span>\n          <span>{'=\"'}</span>\n          <span className=\"HtmlLine__attr-value\">{a.value}</span>\n          <span>{'\"'}</span>\n        </span>\n      ))}\n      <span>{'>'}</span>\n    </span>\n  )\n}\n\nexport const HtmlCloseTag = props => {\n  return (\n    <span className=\"HtmlLine\">\n      <span>{'</'}</span>\n      <span className=\"HtmlLine__tag\">{props.tag}</span>\n      <span>{'>'}</span>\n    </span>\n  )\n}\n\n// CSS\nexport const CssBlockStart = props => {\n  const attributes = props.attributes || []\n  return (\n    <span className=\"CssBlock\">\n      {attributes.map((a, i) => (\n        <span key={`attr-${i}`}>\n          <span className=\"CssBlock__attribute--wrapper\">{'['}</span>\n          <span className=\"CssBlock__attribute--key\">{a.key}</span>\n          <span>{'='}</span>\n          <span className=\"CssBlock__attribute--value\">{`\"${a.value}\"`}</span>\n          <span className=\"CssBlock__attribute--wrapper\">{']'}</span>\n        </span>\n      ))}\n      <span>{' {'}</span>\n    </span>\n  )\n}\n\nexport const CssRule = props => {\n  return (\n    <span className=\"CssBlock\">\n      <Tabulator />\n      <span className=\"CssBlock__rule-key\">{props.ruleKey}</span>:&nbsp;\n      {!props.quoted && (\n        <span>\n          <span className=\"CssBlock__rule-value\">{props.ruleValue}</span>;\n        </span>\n      )}\n      {props.quoted && (\n        <span>\n          <span className=\"CssBlock__rule-string\">\n            {\"'\"}\n            {props.ruleValue}\n            {\"'\"}\n          </span>\n          ;\n        </span>\n      )}\n    </span>\n  )\n}\n\nexport const CssBlockEnd = () => {\n  return (\n    <span className=\"CssBlock\">\n      <span>{'}'}</span>\n    </span>\n  )\n}\n\n// JSON\n\nexport const JsonBlockStart = () => {\n  return (\n    <span className=\"JsonBlock\">\n      <span>{'{'}</span>\n    </span>\n  )\n}\n\nexport const JsonKey = props => {\n  return (\n    <span className=\"JsonBlock\">\n      <span className=\"JsonBlock__key\">\n        {'\"'}\n        {props.jsonKey}\n        {'\"'}\n      </span>\n      : {props.isArray ? '[' : '{'}\n    </span>\n  )\n}\n\nexport const JsonValues = props => {\n  return (\n    <span className=\"JsonBlock\">\n      {props.jsonValues.map((x, i) => (\n        <span key={`jsonVal-${i}`}>\n          <span className=\"JsonBlock__value\">{`\"${x}\"`}</span>\n          {i < props.jsonValues.length - 1 && ', '}\n        </span>\n      ))}\n      {props.trailingComma && ','}\n    </span>\n  )\n}\n\nexport const JsonBlockEnd = () => {\n  return (\n    <span className=\"JsonBlock\">\n      <span>{'}'}</span>\n    </span>\n  )\n}\n\n// YAML\n\nexport const YamlLine = props => {\n  return (\n    <span className=\"YamlLine\">\n      <span className=\"YamlLine__yaml-key\">{props.yamlKey}</span>\n      {': '}\n      <span className=\"YamlLine__yaml-value\">\n        {props.mailLink && <a href={`mailto:${props.yamlValue}`}>{props.yamlValue}</a>}\n        {!props.mailLink && (\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://${props.yamlValue}`}>\n            {props.yamlValue}\n          </a>\n        )}\n      </span>\n    </span>\n  )\n}\n\nexport const YamlArrayValue = props => {\n  return (\n    <span className=\"YamlLine\">\n      <Tabulator />\n      {'- '}\n      <span className=\"YamlLine__yaml-value\">\n        {props.mailLink && <a href={`mailto:${props.yamlLink}`}>{props.yamlValue}</a>}\n        {!props.mailLink && (\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${props.yamlLink}`}>\n            {props.yamlValue}\n          </a>\n        )}\n      </span>\n    </span>\n  )\n}\n","import React from 'react'\nimport moment from 'moment'\n\nimport { CodeBlock, CodeLine, Tabulator, HtmlLine, HtmlOpenTag, HtmlCloseTag } from '../ContentFormatters'\n\nexport default function Intro() {\n  const age = moment().diff(moment('1986-08-17 15:00:00'), 'years')\n  const exp = moment().diff(moment('2009-11-02 09:00:00'), 'years')\n\n  return (\n    <CodeBlock>\n      <CodeLine>\n        <HtmlOpenTag tag=\"div\" attributes={[{ key: 'class', value: 'introduction' }]} />\n      </CodeLine>\n      <CodeLine>\n        <Tabulator />\n        <span className=\"HtmlLine__content\">Senior Software Architect</span>\n      </CodeLine>\n      <CodeLine>\n        <Tabulator />\n        <span className=\"HtmlLine__content\">with {exp} years of experience</span>\n      </CodeLine>\n      <CodeLine>\n        <HtmlCloseTag tag=\"div\" />\n      </CodeLine>\n\n      <CodeLine>\n        <HtmlLine tag=\"p\" attributes={[{ key: 'id', value: 'first-name' }]}>\n          Dario\n        </HtmlLine>\n      </CodeLine>\n      <CodeLine>\n        <HtmlLine tag=\"p\" attributes={[{ key: 'id', value: 'last-name' }]}>\n          Civallero\n        </HtmlLine>\n      </CodeLine>\n      <CodeLine>\n        <HtmlLine tag=\"p\" attributes={[{ key: 'id', value: 'age' }]}>\n          {age}\n        </HtmlLine>\n      </CodeLine>\n      <CodeLine>\n        <HtmlLine tag=\"p\" attributes={[{ key: 'id', value: 'from' }]}>\n          Italy\n        </HtmlLine>\n      </CodeLine>\n      <CodeLine>\n        <HtmlLine tag=\"p\" attributes={[{ key: 'id', value: 'hometown' }]}>\n          Turin\n        </HtmlLine>\n      </CodeLine>\n      <CodeLine>\n        <HtmlOpenTag tag=\"p\" attributes={[{ key: 'id', value: 'speak' }]} />\n      </CodeLine>\n      <CodeLine>\n        <Tabulator />\n        <span className=\"HtmlLine__content\">Italian, English</span>\n      </CodeLine>\n      <CodeLine>\n        <Tabulator />\n        <span className=\"HtmlLine__content\">French, Spanish</span>\n      </CodeLine>\n      <CodeLine>\n        <HtmlCloseTag tag=\"p\" />\n      </CodeLine>\n\n      <CodeLine>\n        <HtmlOpenTag tag=\"ul\" attributes={[{ key: 'class', value: 'about-me' }]} />\n      </CodeLine>\n      <CodeLine>\n        <Tabulator />\n        <HtmlLine tag=\"li\">Cloud Technologist</HtmlLine>\n      </CodeLine>\n      <CodeLine>\n        <Tabulator />\n        <HtmlLine tag=\"li\">Functional Anarchist</HtmlLine>\n      </CodeLine>\n      <CodeLine>\n        <Tabulator />\n        <HtmlLine tag=\"li\">Enthusiastic Dad</HtmlLine>\n      </CodeLine>\n      <CodeLine>\n        <Tabulator />\n        <HtmlLine tag=\"li\">Skateboarder, Snowboarder</HtmlLine>\n      </CodeLine>\n\n      <CodeLine>\n        <Tabulator />\n        <HtmlLine tag=\"li\">Black Cats Addicted</HtmlLine>\n      </CodeLine>\n      <CodeLine>\n        <HtmlCloseTag tag=\"ul\" />\n      </CodeLine>\n    </CodeBlock>\n  )\n}\n"],"sourceRoot":""}