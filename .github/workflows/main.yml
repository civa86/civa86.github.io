name: Continuous Integration

on:
  release:
    types: [published]

jobs:
  build:
    name: Publish on Github Pages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.15.4]

    steps:
      - name: setup node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: git checkout
        uses: actions/checkout@v2

      - name: yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: yarn cache
        id: yarn-cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: install dependencies
        run: yarn install --frozen-lockfile

      - name: build
        run: yarn run build

      - name: version.txt
        run: |
          echo "BUILD NUMBER #$GITHUB_RUN_NUMBER" > ./build/version.txt
          echo "COMMIT SHA $GITHUB_SHA" >> ./build/version.txt
          echo "BUILD DATE `date -R`" >> ./build/version.txt

      - name: upload aritfact
        uses: actions/upload-artifact@v1
        with:
          name: build-${{ github.run_number }}-${{ github.sha }}
          path: build

      - name: get version
        id: get_version
        run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\/v/}

      - name: update version.txt
        shell: bash
        run: |
          echo "DEPLOY DATE `date -R`" >> ./build/version.txt
          echo -e "VERSION ${{ steps.get_version.outputs.version }}\n$(cat ./build/version.txt)" > ./build/version.txt

      - name: deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          publish_branch: master

      - name: update package.json
        shell: bash
        run: yarn version --new-version ${{ steps.get_version.outputs.version }} --no-git-tag-version

      - name: push development
        shell: bash
        run: |
          git config user.email "dario.civallero@gmail.com"
          git config user.name "Dario Civallero"
          git fetch --prune --unshallow
          git checkout development
          git remote set-url --push origin https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git add package.json
          git commit -m "release version ${{ steps.get_version.outputs.version }}"
          git push origin development

      - name: audit production url
        uses: jakejarvis/lighthouse-action@master
        with:
          url: 'https://civa86.github.io/'
      - name: Upload results as an artifact
        uses: actions/upload-artifact@master
        with:
          name: report
          path: './report'
